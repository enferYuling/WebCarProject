<!doctype html>
<html>

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="initial-scale=1.0,  width=device-width">
    <style>
        .canvas-container {
            width: 100%;
            height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        canvas {
            border: 1px solid #000;
        }
    </style>
    <title>卫星图</title>

</head>

<body>

    <!-- <img id="container" src="../Debug/uploads/map.jpeg"  style="display: none;" alt="map" /> -->
    <div class="canvas-container">
        <canvas id="myCanvas"></canvas>
    </div>

    <script>


        const img = new Image();

        const canvas = document.getElementById('myCanvas');
        const ctx = canvas.getContext('2d');
        // 创建一个新的 Image 对象

        // img.src = '../Debug/uploads/map.jpeg';

        img.src = 'http://8.137.119.17:82/uploads/map.jpeg';
        var imgWidth;
        var imgHeight;

        img.onload = function () {
            // 假设缩小比例为 0.5
            let scale = 0.2;
            imgWidth = img.width * scale;
            imgHeight = img.height * scale;

            // 设置画布大小与缩小后的图片尺寸一致

            canvas.width = imgWidth;
            canvas.height = imgHeight;

            // 绘制缩小后的图片到画布
            ctx.drawImage(img, 0, 0, imgWidth, imgHeight);

        };

        // window.onload = function () {


        // 绘制矩形
        //ctx.fillStyle = 'blue';
        //ctx.fillRect(50, 50, 100, 100);

        // 绘制圆形
        //   ctx.beginPath();
        //   ctx.arc(200, 200, 50, 0, 2 * Math.PI);
        //   ctx.strokeStyle = 'green';
        //   ctx.lineWidth = 5;
        //   ctx.stroke();

        //   // 绘制文本
        //   ctx.font = '20px Arial';
        //   ctx.fillStyle = 'red';
        //   ctx.fillText('Hello on Image', 300, 100);

        let isDrawing = false;
        let isShowDrawing = true;
        let lastX, lastY;

        canvas.addEventListener('mousedown', function (e) {

            if (isShowDrawing) {

            }
            else {
                isDrawing = true;
                lastX = e.offsetX;
                lastY = e.offsetY;
            }


        });
        let offsetX = 0;
        let offsetY = 0;
        canvas.addEventListener('mousemove', function (e) {

            if (isDrawing) {

                ctx.beginPath();
                ctx.moveTo(lastX, lastY);
                ctx.lineTo(e.offsetX, e.offsetY);
                ctx.strokeStyle = 'red';
                ctx.lineWidth = 5;
                ctx.stroke();
                lastX = e.offsetX;
                lastY = e.offsetY;
            }

        });
        let isAddingText = false;

        canvas.addEventListener('dblclick', function (e) {

            isAddingText = true;
            isShowDrawing = false;
            lastX = e.offsetX;
            lastY = e.offsetY;

        });

        document.addEventListener('keydown', function (e) {
            if (!isShowDrawing) {
                if (isAddingText) {
                    if (e.key === 'Backspace') {
                        ctx.clearRect(lastX, lastY - 20, ctx.measureText(currentText).width, 20);
                        currentText = '';
                        ctx.drawImage(img, 0, 0, imgWidth, imgHeight);
                    } else if (e.key === 'Enter') {
                        // 确认输入
                        isAddingText = false;

                        isShowDrawing = true;
                        currentText = '';
                    } else if (e.key === 'Escape') {
                        ctx.clearRect(lastX, lastY - 20, ctx.measureText(currentText).width, 20);
                        currentText = '';
                        ctx.drawImage(img, 0, 0, imgWidth, imgHeight);
                    }
                    else if (/^[a-zA-Z0-9\u4e00-\u9fa5\s!#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]$/.test(e.key)) {
                        // 添加字符
                        currentText += e.key;
                        ctx.clearRect(lastX, lastY - 20, ctx.measureText(currentText).width, 20);
                        ctx.font = '80px Arial';
                        ctx.fillStyle = 'blue';
                        ctx.fillText(currentText, lastX, lastY);
                    }
                }
            } else {
                switch (e.key) {
                    case 'P': {
                        saveCanvas();
                        break;
                    }
                    case 'p': {
                        saveCanvas();
                        break;
                    }
                }
            }
        });

        let currentText = '';
        canvas.addEventListener('mouseup', function () {
            isDrawing = false;

        });


        //  };
        function resizeToFit(width, height) {

            canvas.width = width
            canvas.height = height

        }

        // window.addEventListener('resize', resizeToFit(800,500));
        //下载
        function saveCanvas() {
            const dataURL = canvas.toDataURL();
            const a = document.createElement('a');
            a.href = dataURL;
            a.download = 'canvas_image.jpeg';
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
        }
    </script>

</body>

</html>